
name: UpdateProd

on:
  push:
    branches:
    - master

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  update-api:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build image
        run: ./mvnw -T 1C clean install -pl backend/core -am -DskipTests && ./mvnw -T 1C clean install -pl backend/auth -am -DskipTests && ./mvnw -T 1C clean spring-boot:build-image -pl backend/api -DskipTests

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: docker push donkeyhott/ekbtrees-api:latest

  update-compose-file:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Copy file via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          source: "deployment/docker-compose-prod.yml"
          target: "."
          strip_components: 1

  redeploy:

    runs-on: ubuntu-latest

    needs: [update-api, update-compose-file]

    steps:
      - name: Pull and run image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            set -e

            rm prod.env
            echo "DATASOURCE_URL=${{ secrets.DATASOURCE_URL }}" >> prod.env
            echo "DATASOURCE_LOGIN=${{ secrets.DATASOURCE_LOGIN }}" >> prod.env
            echo "DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }}" >> prod.env
            echo "DDL_AUTO=none" >> prod.env
            echo "VK_APP_ID=${{ secrets.VK_APP_ID }}" >> prod.env
            echo "VK_APP_SECRET_KEY=${{ secrets.VK_APP_SECRET_KEY }}" >> prod.env
            echo "FB_APP_ID=${{ secrets.FB_APP_ID }}" >> prod.env
            echo "FB_APP_SECRET_KEY=${{ secrets.FB_APP_SECRET_KEY }}" >> prod.env
            echo "BASE_URL=${{ secrets.BASE_URL }}" >> prod.env
            echo "ACCESS_TOKEN_LIFESPAN=${{ secrets.ACCESS_TOKEN_LIFESPAN }}" >> prod.env
            echo "REFRESH_TOKEN_LIFESPAN=${{ secrets.REFRESH_TOKEN_LIFESPAN }}" >> prod.env
            echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> prod.env
            echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> prod.env
            echo "PASSWORDS_SALT=${{ secrets.PASSWORDS_SALT }}" >> prod.env
            echo "S3_HOST=${{ secrets.S3_HOST }}" >> prod.env
            echo "S3_REGION=${{ secrets.S3_REGION }}" >> prod.env
            echo "S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}" >> prod.env
            echo "S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}" >> prod.env
            echo "PASSWORDS_SALT=${{ secrets.PASSWORDS_SALT }}" >> prod.env
            echo "SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> prod.env

            docker pull donkeyhott/ekbtrees-api:latest

            docker-compose --env-file ./prod.env -f ./docker-compose-prod.yml down -v --remove-orphans
            docker-compose --env-file ./prod.env -f ./docker-compose-prod.yml up --build -d
